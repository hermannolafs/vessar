// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: samskipti.proto

package samskipti

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModelName int32

const (
	ModelName_UNKNOWN_MODEL ModelName = 0
	ModelName_PEE           ModelName = 1
	ModelName_POO           ModelName = 2
)

// Enum value maps for ModelName.
var (
	ModelName_name = map[int32]string{
		0: "UNKNOWN_MODEL",
		1: "PEE",
		2: "POO",
	}
	ModelName_value = map[string]int32{
		"UNKNOWN_MODEL": 0,
		"PEE":           1,
		"POO":           2,
	}
)

func (x ModelName) Enum() *ModelName {
	p := new(ModelName)
	*p = x
	return p
}

func (x ModelName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModelName) Descriptor() protoreflect.EnumDescriptor {
	return file_samskipti_proto_enumTypes[0].Descriptor()
}

func (ModelName) Type() protoreflect.EnumType {
	return &file_samskipti_proto_enumTypes[0]
}

func (x ModelName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModelName.Descriptor instead.
func (ModelName) EnumDescriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{0}
}

type HumorType int32

const (
	HumorType_UNKNOWN_TYPE HumorType = 0
	// Detection types
	HumorType_BLOOD       HumorType = 1
	HumorType_PHLEGM      HumorType = 2
	HumorType_BLACK_BILE  HumorType = 3
	HumorType_YELLOW_BILE HumorType = 4
)

// Enum value maps for HumorType.
var (
	HumorType_name = map[int32]string{
		0: "UNKNOWN_TYPE",
		1: "BLOOD",
		2: "PHLEGM",
		3: "BLACK_BILE",
		4: "YELLOW_BILE",
	}
	HumorType_value = map[string]int32{
		"UNKNOWN_TYPE": 0,
		"BLOOD":        1,
		"PHLEGM":       2,
		"BLACK_BILE":   3,
		"YELLOW_BILE":  4,
	}
)

func (x HumorType) Enum() *HumorType {
	p := new(HumorType)
	*p = x
	return p
}

func (x HumorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HumorType) Descriptor() protoreflect.EnumDescriptor {
	return file_samskipti_proto_enumTypes[1].Descriptor()
}

func (HumorType) Type() protoreflect.EnumType {
	return &file_samskipti_proto_enumTypes[1]
}

func (x HumorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HumorType.Descriptor instead.
func (HumorType) EnumDescriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{1}
}

type Humor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Humour HumorType `protobuf:"varint,1,opt,name=humour,proto3,enum=samskipti.HumorType" json:"humour,omitempty"`
}

func (x *Humor) Reset() {
	*x = Humor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samskipti_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Humor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Humor) ProtoMessage() {}

func (x *Humor) ProtoReflect() protoreflect.Message {
	mi := &file_samskipti_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Humor.ProtoReflect.Descriptor instead.
func (*Humor) Descriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{0}
}

func (x *Humor) GetHumour() HumorType {
	if x != nil {
		return x.Humour
	}
	return HumorType_UNKNOWN_TYPE
}

type ModelMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port       int32     `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"` // The host machine port of the model
	Ip         string    `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`      // Public IP address of the model
	HumourList []*Humor  `protobuf:"bytes,3,rep,name=humour_list,json=humourList,proto3" json:"humour_list,omitempty"`
	ModelName  ModelName `protobuf:"varint,5,opt,name=model_name,json=modelName,proto3,enum=samskipti.ModelName" json:"model_name,omitempty"`
}

func (x *ModelMetadata) Reset() {
	*x = ModelMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samskipti_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelMetadata) ProtoMessage() {}

func (x *ModelMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_samskipti_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelMetadata.ProtoReflect.Descriptor instead.
func (*ModelMetadata) Descriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{1}
}

func (x *ModelMetadata) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ModelMetadata) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ModelMetadata) GetHumourList() []*Humor {
	if x != nil {
		return x.HumourList
	}
	return nil
}

func (x *ModelMetadata) GetModelName() ModelName {
	if x != nil {
		return x.ModelName
	}
	return ModelName_UNKNOWN_MODEL
}

type ModelMetadataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelMetadataList []*ModelMetadata `protobuf:"bytes,1,rep,name=model_metadata_list,json=modelMetadataList,proto3" json:"model_metadata_list,omitempty"`
}

func (x *ModelMetadataList) Reset() {
	*x = ModelMetadataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samskipti_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelMetadataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelMetadataList) ProtoMessage() {}

func (x *ModelMetadataList) ProtoReflect() protoreflect.Message {
	mi := &file_samskipti_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelMetadataList.ProtoReflect.Descriptor instead.
func (*ModelMetadataList) Descriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{2}
}

func (x *ModelMetadataList) GetModelMetadataList() []*ModelMetadata {
	if x != nil {
		return x.ModelMetadataList
	}
	return nil
}

type Null struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Null) Reset() {
	*x = Null{}
	if protoimpl.UnsafeEnabled {
		mi := &file_samskipti_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Null) ProtoMessage() {}

func (x *Null) ProtoReflect() protoreflect.Message {
	mi := &file_samskipti_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Null.ProtoReflect.Descriptor instead.
func (*Null) Descriptor() ([]byte, []int) {
	return file_samskipti_proto_rawDescGZIP(), []int{3}
}

var File_samskipti_proto protoreflect.FileDescriptor

var file_samskipti_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x22, 0x35, 0x0a, 0x05,
	0x48, 0x75, 0x6d, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x68, 0x75, 0x6d, 0x6f, 0x75, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74,
	0x69, 0x2e, 0x48, 0x75, 0x6d, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x68, 0x75, 0x6d,
	0x6f, 0x75, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x68, 0x75, 0x6d,
	0x6f, 0x75, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x48, 0x75, 0x6d, 0x6f, 0x72,
	0x52, 0x0a, 0x68, 0x75, 0x6d, 0x6f, 0x75, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x5d, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x2a, 0x30, 0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x45, 0x45, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x4f, 0x10, 0x02, 0x2a, 0x55, 0x0a, 0x09, 0x48, 0x75,
	0x6d, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f,
	0x4f, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x48, 0x4c, 0x45, 0x47, 0x4d, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x5f, 0x42, 0x49, 0x4c, 0x45, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x42, 0x49, 0x4c, 0x45, 0x10,
	0x04, 0x32, 0xd5, 0x01, 0x0a, 0x05, 0x48, 0x65, 0x69, 0x6c, 0x69, 0x12, 0x40, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69,
	0x70, 0x74, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x18, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0a, 0x64, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x73, 0x61,
	0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74,
	0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x00, 0x12, 0x46, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b,
	0x69, 0x70, 0x74, 0x69, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x1a, 0x1c, 0x2e, 0x73, 0x61, 0x6d, 0x73,
	0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x32, 0x39, 0x0a, 0x06, 0x48, 0x6a, 0x61,
	0x72, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x74, 0x69, 0x63, 0x6b, 0x12,
	0x0f, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x1a, 0x10, 0x2e, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x2e, 0x48, 0x75, 0x6d,
	0x6f, 0x72, 0x22, 0x00, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x6e, 0x6f, 0x6c, 0x61, 0x66, 0x73, 0x2f,
	0x76, 0x65, 0x73, 0x73, 0x61, 0x72, 0x2f, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69,
	0x2f, 0x67, 0x6f, 0x3b, 0x73, 0x61, 0x6d, 0x73, 0x6b, 0x69, 0x70, 0x74, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_samskipti_proto_rawDescOnce sync.Once
	file_samskipti_proto_rawDescData = file_samskipti_proto_rawDesc
)

func file_samskipti_proto_rawDescGZIP() []byte {
	file_samskipti_proto_rawDescOnce.Do(func() {
		file_samskipti_proto_rawDescData = protoimpl.X.CompressGZIP(file_samskipti_proto_rawDescData)
	})
	return file_samskipti_proto_rawDescData
}

var file_samskipti_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_samskipti_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_samskipti_proto_goTypes = []interface{}{
	(ModelName)(0),            // 0: samskipti.ModelName
	(HumorType)(0),            // 1: samskipti.HumorType
	(*Humor)(nil),             // 2: samskipti.Humor
	(*ModelMetadata)(nil),     // 3: samskipti.ModelMetadata
	(*ModelMetadataList)(nil), // 4: samskipti.ModelMetadataList
	(*Null)(nil),              // 5: samskipti.Null
}
var file_samskipti_proto_depIdxs = []int32{
	1, // 0: samskipti.Humor.humour:type_name -> samskipti.HumorType
	2, // 1: samskipti.ModelMetadata.humour_list:type_name -> samskipti.Humor
	0, // 2: samskipti.ModelMetadata.model_name:type_name -> samskipti.ModelName
	3, // 3: samskipti.ModelMetadataList.model_metadata_list:type_name -> samskipti.ModelMetadata
	3, // 4: samskipti.Heili.register:input_type -> samskipti.ModelMetadata
	3, // 5: samskipti.Heili.deregister:input_type -> samskipti.ModelMetadata
	5, // 6: samskipti.Heili.getRegisteredModels:input_type -> samskipti.Null
	5, // 7: samskipti.Hjarta.gametick:input_type -> samskipti.Null
	3, // 8: samskipti.Heili.register:output_type -> samskipti.ModelMetadata
	3, // 9: samskipti.Heili.deregister:output_type -> samskipti.ModelMetadata
	4, // 10: samskipti.Heili.getRegisteredModels:output_type -> samskipti.ModelMetadataList
	2, // 11: samskipti.Hjarta.gametick:output_type -> samskipti.Humor
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_samskipti_proto_init() }
func file_samskipti_proto_init() {
	if File_samskipti_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_samskipti_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Humor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samskipti_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samskipti_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelMetadataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_samskipti_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Null); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_samskipti_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_samskipti_proto_goTypes,
		DependencyIndexes: file_samskipti_proto_depIdxs,
		EnumInfos:         file_samskipti_proto_enumTypes,
		MessageInfos:      file_samskipti_proto_msgTypes,
	}.Build()
	File_samskipti_proto = out.File
	file_samskipti_proto_rawDesc = nil
	file_samskipti_proto_goTypes = nil
	file_samskipti_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HeiliClient is the client API for Heili service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HeiliClient interface {
	Register(ctx context.Context, in *ModelMetadata, opts ...grpc.CallOption) (*ModelMetadata, error)
	Deregister(ctx context.Context, in *ModelMetadata, opts ...grpc.CallOption) (*ModelMetadata, error)
	GetRegisteredModels(ctx context.Context, in *Null, opts ...grpc.CallOption) (*ModelMetadataList, error)
}

type heiliClient struct {
	cc grpc.ClientConnInterface
}

func NewHeiliClient(cc grpc.ClientConnInterface) HeiliClient {
	return &heiliClient{cc}
}

func (c *heiliClient) Register(ctx context.Context, in *ModelMetadata, opts ...grpc.CallOption) (*ModelMetadata, error) {
	out := new(ModelMetadata)
	err := c.cc.Invoke(ctx, "/samskipti.Heili/register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heiliClient) Deregister(ctx context.Context, in *ModelMetadata, opts ...grpc.CallOption) (*ModelMetadata, error) {
	out := new(ModelMetadata)
	err := c.cc.Invoke(ctx, "/samskipti.Heili/deregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *heiliClient) GetRegisteredModels(ctx context.Context, in *Null, opts ...grpc.CallOption) (*ModelMetadataList, error) {
	out := new(ModelMetadataList)
	err := c.cc.Invoke(ctx, "/samskipti.Heili/getRegisteredModels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HeiliServer is the server API for Heili service.
type HeiliServer interface {
	Register(context.Context, *ModelMetadata) (*ModelMetadata, error)
	Deregister(context.Context, *ModelMetadata) (*ModelMetadata, error)
	GetRegisteredModels(context.Context, *Null) (*ModelMetadataList, error)
}

// UnimplementedHeiliServer can be embedded to have forward compatible implementations.
type UnimplementedHeiliServer struct {
}

func (*UnimplementedHeiliServer) Register(context.Context, *ModelMetadata) (*ModelMetadata, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedHeiliServer) Deregister(context.Context, *ModelMetadata) (*ModelMetadata, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deregister not implemented")
}
func (*UnimplementedHeiliServer) GetRegisteredModels(context.Context, *Null) (*ModelMetadataList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegisteredModels not implemented")
}

func RegisterHeiliServer(s *grpc.Server, srv HeiliServer) {
	s.RegisterService(&_Heili_serviceDesc, srv)
}

func _Heili_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeiliServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/samskipti.Heili/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeiliServer).Register(ctx, req.(*ModelMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heili_Deregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeiliServer).Deregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/samskipti.Heili/Deregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeiliServer).Deregister(ctx, req.(*ModelMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Heili_GetRegisteredModels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HeiliServer).GetRegisteredModels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/samskipti.Heili/GetRegisteredModels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HeiliServer).GetRegisteredModels(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Heili_serviceDesc = grpc.ServiceDesc{
	ServiceName: "samskipti.Heili",
	HandlerType: (*HeiliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "register",
			Handler:    _Heili_Register_Handler,
		},
		{
			MethodName: "deregister",
			Handler:    _Heili_Deregister_Handler,
		},
		{
			MethodName: "getRegisteredModels",
			Handler:    _Heili_GetRegisteredModels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "samskipti.proto",
}

// HjartaClient is the client API for Hjarta service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HjartaClient interface {
	Gametick(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Humor, error)
}

type hjartaClient struct {
	cc grpc.ClientConnInterface
}

func NewHjartaClient(cc grpc.ClientConnInterface) HjartaClient {
	return &hjartaClient{cc}
}

func (c *hjartaClient) Gametick(ctx context.Context, in *Null, opts ...grpc.CallOption) (*Humor, error) {
	out := new(Humor)
	err := c.cc.Invoke(ctx, "/samskipti.Hjarta/gametick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HjartaServer is the server API for Hjarta service.
type HjartaServer interface {
	Gametick(context.Context, *Null) (*Humor, error)
}

// UnimplementedHjartaServer can be embedded to have forward compatible implementations.
type UnimplementedHjartaServer struct {
}

func (*UnimplementedHjartaServer) Gametick(context.Context, *Null) (*Humor, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gametick not implemented")
}

func RegisterHjartaServer(s *grpc.Server, srv HjartaServer) {
	s.RegisterService(&_Hjarta_serviceDesc, srv)
}

func _Hjarta_Gametick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Null)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HjartaServer).Gametick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/samskipti.Hjarta/Gametick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HjartaServer).Gametick(ctx, req.(*Null))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hjarta_serviceDesc = grpc.ServiceDesc{
	ServiceName: "samskipti.Hjarta",
	HandlerType: (*HjartaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "gametick",
			Handler:    _Hjarta_Gametick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "samskipti.proto",
}
